.. File Generated By c7n-sphinxext from source. Do not edit.

.. _azure.cosmosdb-collection:

azure.cosmosdb-collection
=========================

CosmosDB Collection Resource

:example:

This policy will find all collections with Offer Throughput > 100

.. code-block:: yaml

    policies:
      - name: cosmosdb-high-throughput
        resource: azure.cosmosdb-collection
        filters:
          - type: offer
            key: content.offerThroughput
            op: gt
            value: 100


Filters
-------


  - :ref:`event <azure.common.filters.event>`
  
  - :ref:`metric <azure.common.filters.metric>`
  
  - :ref:`offer <azure.common.filters.offer>`
  
  - :ref:`parent <azure.common.filters.parent>`
  
  - :ref:`reduce <azure.common.filters.reduce>`
  
  - :ref:`value <azure.common.filters.value>`
  




Actions
-------


  - :ref:`logic-app <azure.common.actions.logic-app>`
  
  - :ref:`notify <azure.common.actions.notify>`
  
  - :ref:`replace-offer <azure.cosmosdb-collection.actions.replace-offer>`

  - :ref:`restore-throughput-state <azure.cosmosdb-collection.actions.restore-throughput-state>`

  - :ref:`save-throughput-state <azure.cosmosdb-collection.actions.save-throughput-state>`

  - :ref:`webhook <azure.common.actions.webhook>`
  



.. _azure.cosmosdb-collection.actions.replace-offer:

replace-offer
+++++++++++++
CosmosDB Replace Offer Action

Modify the throughput of a cosmodb collection's offer

:example:

This policy will ensure that no collections have offers with more than 400 RU/s throughput.

.. code-block:: yaml

    policies:
      - name: limit-throughput-to-400
        resource: azure.cosmosdb-collection
        filters:
          - type: offer
            key: content.offerThroughput
            op: gt
            value: 400
        actions:
          - type: replace-offer
            throughput: 400

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      throughput:
        type: number
      type:
        enum:
        - replace-offer
    required:
    - throughput
    - type





.. _azure.cosmosdb-collection.actions.restore-throughput-state:

restore-throughput-state
++++++++++++++++++++++++
CosmosDB Restore State Action

Restores the throughput of a cosmodb collection's offer from state
stored in a tag on the collections's parent CosmosDB account.

:example:

This policy will restore the state of Cosmos DB collections by retrieving the state from
the tag 'on-hour-state' from its associated Cosmos DB account.

.. code-block:: yaml

    policies:
      - name: restore-throughput-state
        resource: azure.cosmosdb-collection
        actions:
          - type: restore-throughput-state
            state-tag: on-hour-state

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      state-tag:
        type: string
      type:
        enum:
        - restore-throughput-state
    required:
    - state-tag
    - type





.. _azure.cosmosdb-collection.actions.save-throughput-state:

save-throughput-state
+++++++++++++++++++++
CosmosDB Store State Action

Stores the throughput of collections in a tag on the parent Cosmos DB account.
With accounts that have many collections, it's important to filter down which
collections to store since there is a tag length limit (approx 16 collections).

:example:

This policy saves the throughput of collections with throughput over 400 in
a tag called 'on-hour-state' on the parent Cosmos DB account.

.. code-block:: yaml

    policies:
      - name: store-on-hours-state
        resource: azure.cosmosdb-collection
        filters:
          - type: offer
            key: content.offerThroughput
            op: gt
            value: 400
        actions:
          - type: save-throughput-state
            state-tag: on-hour-state

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      state-tag:
        type: string
      type:
        enum:
        - save-throughput-state
    required:
    - state-tag
    - type




