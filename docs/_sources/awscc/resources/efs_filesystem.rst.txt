.. File Generated By c7n-sphinxext from source. Do not edit.

.. _awscc.efs_filesystem:

awscc.efs_filesystem
====================




Filters
-------


  - :ref:`event <awscc.common.filters.event>`
  
  - :ref:`reduce <awscc.common.filters.reduce>`
  
  - :ref:`value <awscc.common.filters.value>`
  




Actions
-------


  - :ref:`delete <awscc.efs_filesystem.actions.delete>`

  - :ref:`update <awscc.efs_filesystem.actions.update>`

  - :ref:`webhook <awscc.common.actions.webhook>`
  



.. _awscc.efs_filesystem.actions.delete:

delete
++++++
Parent base class for filters and actions.
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type




Permissions - elasticfilesystem:DescribeFileSystems, elasticfilesystem:DeleteFileSystem


.. _awscc.efs_filesystem.actions.update:

update
++++++
Parent base class for filters and actions.
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    definitions:
      BackupPolicy:
        additionalProperties: false
        properties:
          Status:
            type: string
        required:
        - Status
        type: object
      ElasticFileSystemTag:
        additionalProperties: false
        properties:
          Key:
            type: string
          Value:
            type: string
        required:
        - Value
        - Key
        type: object
      LifecyclePolicy:
        additionalProperties: false
        properties:
          TransitionToIA:
            type: string
          TransitionToPrimaryStorageClass:
            type: string
        type: object
    properties:
      BackupPolicy:
        additionalProperties: false
        properties:
          Status:
            type: string
        required:
        - Status
        type: object
      BypassPolicyLockoutSafetyCheck:
        description: Whether to bypass the FileSystemPolicy lockout safety check. The
          policy lockout safety check determines whether the policy in the request will
          prevent the principal making the request to be locked out from making future
          PutFileSystemPolicy requests on the file system. Set BypassPolicyLockoutSafetyCheck
          to True only when you intend to prevent the principal that is making the request
          from making a subsequent PutFileSystemPolicy request on the file system. Defaults
          to false
        type: boolean
      FileSystemPolicy:
        type: object
      FileSystemTags:
        items:
          additionalProperties: false
          properties:
            Key:
              type: string
            Value:
              type: string
          required:
          - Value
          - Key
          type: object
        type: array
        uniqueItems: true
      LifecyclePolicies:
        items:
          additionalProperties: false
          properties:
            TransitionToIA:
              type: string
            TransitionToPrimaryStorageClass:
              type: string
          type: object
        type: array
        uniqueItems: true
      ProvisionedThroughputInMibps:
        type: number
      ThroughputMode:
        type: string
      type:
        enum:
        - update




Permissions - elasticfilesystem:DeleteFileSystemPolicy, elasticfilesystem:DescribeBackupPolicy, elasticfilesystem:DescribeFileSystemPolicy, elasticfilesystem:DescribeFileSystems, elasticfilesystem:DescribeLifecycleConfiguration, elasticfilesystem:DeleteTags, elasticfilesystem:ListTagsForResource, elasticfilesystem:PutBackupPolicy, elasticfilesystem:PutFileSystemPolicy, elasticfilesystem:PutLifecycleConfiguration, elasticfilesystem:TagResource, elasticfilesystem:UntagResource, elasticfilesystem:UpdateFileSystem

