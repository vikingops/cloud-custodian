.. File Generated By c7n-sphinxext from source. Do not edit.

.. _awscc.gamelift_fleet:

awscc.gamelift_fleet
====================




Filters
-------


  - :ref:`event <awscc.common.filters.event>`
  
  - :ref:`reduce <awscc.common.filters.reduce>`
  
  - :ref:`value <awscc.common.filters.value>`
  




Actions
-------


  - :ref:`delete <awscc.gamelift_fleet.actions.delete>`

  - :ref:`update <awscc.gamelift_fleet.actions.update>`

  - :ref:`webhook <awscc.common.actions.webhook>`
  



.. _awscc.gamelift_fleet.actions.delete:

delete
++++++
Parent base class for filters and actions.
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type




Permissions - gamelift:DeleteFleet, gamelift:DescribeFleetLocationCapacity


.. _awscc.gamelift_fleet.actions.update:

update
++++++
Parent base class for filters and actions.
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    definitions:
      CertificateConfiguration:
        additionalProperties: false
        description: Information about the use of a TLS/SSL certificate for a fleet. TLS
          certificate generation is enabled at the fleet level, with one certificate generated
          for the fleet. When this feature is enabled, the certificate can be retrieved
          using the GameLift Server SDK call GetInstanceCertificate. All instances in
          a fleet share the same certificate.
        properties:
          CertificateType:
            enum:
            - DISABLED
            - GENERATED
            type: string
        required:
        - CertificateType
        type: object
      IpPermission:
        additionalProperties: false
        description: A range of IP addresses and port settings that allow inbound traffic
          to connect to server processes on an Amazon GameLift hosting resource. New game
          sessions that are started on the fleet are assigned an IP address/port number
          combination, which must fall into the fleet's allowed ranges. For fleets created
          with a custom game server, the ranges reflect the server's game session assignments.
          For Realtime Servers fleets, Amazon GameLift automatically opens two port ranges,
          one for TCP messaging and one for UDP, for use by the Realtime servers.
        properties:
          FromPort:
            description: A starting value for a range of allowed port numbers.
            maximum: 60000
            minimum: 1
            type: integer
          IpRange:
            description: 'A range of allowed IP addresses. This value must be expressed
              in CIDR notation. Example: "000.000.000.000/[subnet mask]" or optionally
              the shortened version "0.0.0.0/[subnet mask]".'
            pattern: (^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$)
            type: string
          Protocol:
            description: The network communication protocol used by the fleet.
            enum:
            - TCP
            - UDP
            type: string
          ToPort:
            description: An ending value for a range of allowed port numbers. Port numbers
              are end-inclusive. This value must be higher than FromPort.
            maximum: 60000
            minimum: 1
            type: integer
        required:
        - FromPort
        - IpRange
        - Protocol
        - ToPort
        type: object
      Location:
        maxLength: 64
        minLength: 1
        pattern: ^[a-z]+(-([a-z]+|\d))*
        type: string
      LocationCapacity:
        additionalProperties: false
        description: Current resource capacity settings in a specified fleet or location.
          The location value might refer to a fleet's remote location or its home Region.
        properties:
          DesiredEC2Instances:
            description: The number of EC2 instances you want to maintain in the specified
              fleet location. This value must fall between the minimum and maximum size
              limits.
            minimum: 0
            type: integer
          MaxSize:
            description: The maximum value that is allowed for the fleet's instance count
              for a location. When creating a new fleet, GameLift automatically sets this
              value to "1". Once the fleet is active, you can change this value.
            minimum: 0
            type: integer
          MinSize:
            description: The minimum value allowed for the fleet's instance count for
              a location. When creating a new fleet, GameLift automatically sets this
              value to "0". After the fleet is active, you can change this value.
            minimum: 0
            type: integer
        required:
        - DesiredEC2Instances
        - MinSize
        - MaxSize
        type: object
      LocationConfiguration:
        additionalProperties: false
        description: A remote location where a multi-location fleet can deploy EC2 instances
          for game hosting.
        properties:
          Location:
            maxLength: 64
            minLength: 1
            pattern: ^[a-z]+(-([a-z]+|\d))*
            type: string
          LocationCapacity:
            additionalProperties: false
            description: Current resource capacity settings in a specified fleet or location.
              The location value might refer to a fleet's remote location or its home
              Region.
            properties:
              DesiredEC2Instances:
                description: The number of EC2 instances you want to maintain in the specified
                  fleet location. This value must fall between the minimum and maximum
                  size limits.
                minimum: 0
                type: integer
              MaxSize:
                description: The maximum value that is allowed for the fleet's instance
                  count for a location. When creating a new fleet, GameLift automatically
                  sets this value to "1". Once the fleet is active, you can change this
                  value.
                minimum: 0
                type: integer
              MinSize:
                description: The minimum value allowed for the fleet's instance count
                  for a location. When creating a new fleet, GameLift automatically sets
                  this value to "0". After the fleet is active, you can change this value.
                minimum: 0
                type: integer
            required:
            - DesiredEC2Instances
            - MinSize
            - MaxSize
            type: object
        required:
        - Location
        type: object
      ResourceCreationLimitPolicy:
        additionalProperties: false
        description: 'A policy that limits the number of game sessions a player can create
          on the same fleet. This optional policy gives game owners control over how players
          can consume available game server resources. A resource creation policy makes
          the following statement: "An individual player can create a maximum number of
          new game sessions within a specified time period".


          The policy is evaluated when a player tries to create a new game session. For
          example, assume you have a policy of 10 new game sessions and a time period
          of 60 minutes. On receiving a CreateGameSession request, Amazon GameLift checks
          that the player (identified by CreatorId) has created fewer than 10 game sessions
          in the past 60 minutes.'
        properties:
          NewGameSessionsPerCreator:
            description: The maximum number of game sessions that an individual can create
              during the policy period.
            minimum: 0
            type: integer
          PolicyPeriodInMinutes:
            description: The time span used in evaluating the resource creation limit
              policy.
            minimum: 0
            type: integer
        type: object
      RuntimeConfiguration:
        additionalProperties: false
        description: 'A collection of server process configurations that describe the
          processes to run on each instance in a fleet. All fleets must have a runtime
          configuration. Each instance in the fleet maintains server processes as specified
          in the runtime configuration, launching new ones as existing processes end.
          Each instance regularly checks for an updated runtime configuration makes adjustments
          as called for.


          The runtime configuration enables the instances in a fleet to run multiple processes
          simultaneously. Potential scenarios are as follows: (1) Run multiple processes
          of a single game server executable to maximize usage of your hosting resources.
          (2) Run one or more processes of different executables, such as your game server
          and a metrics tracking program. (3) Run multiple processes of a single game
          server but with different launch parameters, for example to run one process
          on each instance in debug mode.


          An Amazon GameLift instance is limited to 50 processes running simultaneously.
          A runtime configuration must specify fewer than this limit. To calculate the
          total number of processes specified in a runtime configuration, add the values
          of the ConcurrentExecutions parameter for each ServerProcess object in the runtime
          configuration.'
        properties:
          GameSessionActivationTimeoutSeconds:
            description: The maximum amount of time (in seconds) that a game session can
              remain in status ACTIVATING. If the game session is not active before the
              timeout, activation is terminated and the game session status is changed
              to TERMINATED.
            maximum: 600
            minimum: 1
            type: integer
          MaxConcurrentGameSessionActivations:
            description: The maximum number of game sessions with status ACTIVATING to
              allow on an instance simultaneously. This setting limits the amount of instance
              resources that can be used for new game activations at any one time.
            maximum: 2147483647
            minimum: 1
            type: integer
          ServerProcesses:
            description: A collection of server process configurations that describe which
              server processes to run on each instance in a fleet.
            insertionOrder: false
            items:
              additionalProperties: false
              description: A set of instructions for launching server processes on each
                instance in a fleet. Each instruction set identifies the location of the
                server executable, optional launch parameters, and the number of server
                processes with this configuration to maintain concurrently on the instance.
                Server process configurations make up a fleet's RuntimeConfiguration.
              properties:
                ConcurrentExecutions:
                  description: The number of server processes that use this configuration
                    to run concurrently on an instance.
                  minimum: 1
                  type: integer
                LaunchPath:
                  description: 'The location of the server executable in a custom game
                    build or the name of the Realtime script file that contains the Init()
                    function. Game builds and Realtime scripts are installed on instances
                    at the root:


                    Windows (for custom game builds only): C:\game. Example: "C:\game\MyGame\server.exe"


                    Linux: /local/game. Examples: "/local/game/MyGame/server.exe" or "/local/game/MyRealtimeScript.js"'
                  maxLength: 1024
                  minLength: 1
                  pattern: ^([Cc]:\\game\S+|/local/game/\S+)
                  type: string
                Parameters:
                  description: An optional list of parameters to pass to the server executable
                    or Realtime script on launch.
                  maxLength: 1024
                  minLength: 1
                  type: string
              required:
              - ConcurrentExecutions
              - LaunchPath
              type: object
            maxItems: 50
            type: array
        type: object
      ServerProcess:
        additionalProperties: false
        description: A set of instructions for launching server processes on each instance
          in a fleet. Each instruction set identifies the location of the server executable,
          optional launch parameters, and the number of server processes with this configuration
          to maintain concurrently on the instance. Server process configurations make
          up a fleet's RuntimeConfiguration.
        properties:
          ConcurrentExecutions:
            description: The number of server processes that use this configuration to
              run concurrently on an instance.
            minimum: 1
            type: integer
          LaunchPath:
            description: 'The location of the server executable in a custom game build
              or the name of the Realtime script file that contains the Init() function.
              Game builds and Realtime scripts are installed on instances at the root:


              Windows (for custom game builds only): C:\game. Example: "C:\game\MyGame\server.exe"


              Linux: /local/game. Examples: "/local/game/MyGame/server.exe" or "/local/game/MyRealtimeScript.js"'
            maxLength: 1024
            minLength: 1
            pattern: ^([Cc]:\\game\S+|/local/game/\S+)
            type: string
          Parameters:
            description: An optional list of parameters to pass to the server executable
              or Realtime script on launch.
            maxLength: 1024
            minLength: 1
            type: string
        required:
        - ConcurrentExecutions
        - LaunchPath
        type: object
    properties:
      Description:
        description: A human-readable description of a fleet.
        maxLength: 1024
        minLength: 1
        type: string
      DesiredEC2Instances:
        description: '[DEPRECATED] The number of EC2 instances that you want this fleet
          to host. When creating a new fleet, GameLift automatically sets this value to
          "1" and initiates a single instance. Once the fleet is active, update this value
          to trigger GameLift to add or remove instances from the fleet.'
        minimum: 0
        type: integer
      EC2InboundPermissions:
        description: A range of IP addresses and port settings that allow inbound traffic
          to connect to server processes on an Amazon GameLift server.
        insertionOrder: false
        items:
          additionalProperties: false
          description: A range of IP addresses and port settings that allow inbound traffic
            to connect to server processes on an Amazon GameLift hosting resource. New
            game sessions that are started on the fleet are assigned an IP address/port
            number combination, which must fall into the fleet's allowed ranges. For fleets
            created with a custom game server, the ranges reflect the server's game session
            assignments. For Realtime Servers fleets, Amazon GameLift automatically opens
            two port ranges, one for TCP messaging and one for UDP, for use by the Realtime
            servers.
          properties:
            FromPort:
              description: A starting value for a range of allowed port numbers.
              maximum: 60000
              minimum: 1
              type: integer
            IpRange:
              description: 'A range of allowed IP addresses. This value must be expressed
                in CIDR notation. Example: "000.000.000.000/[subnet mask]" or optionally
                the shortened version "0.0.0.0/[subnet mask]".'
              pattern: (^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$)
              type: string
            Protocol:
              description: The network communication protocol used by the fleet.
              enum:
              - TCP
              - UDP
              type: string
            ToPort:
              description: An ending value for a range of allowed port numbers. Port numbers
                are end-inclusive. This value must be higher than FromPort.
              maximum: 60000
              minimum: 1
              type: integer
          required:
          - FromPort
          - IpRange
          - Protocol
          - ToPort
          type: object
        maxItems: 50
        type: array
      Locations:
        insertionOrder: false
        items:
          additionalProperties: false
          description: A remote location where a multi-location fleet can deploy EC2 instances
            for game hosting.
          properties:
            Location:
              maxLength: 64
              minLength: 1
              pattern: ^[a-z]+(-([a-z]+|\d))*
              type: string
            LocationCapacity:
              additionalProperties: false
              description: Current resource capacity settings in a specified fleet or
                location. The location value might refer to a fleet's remote location
                or its home Region.
              properties:
                DesiredEC2Instances:
                  description: The number of EC2 instances you want to maintain in the
                    specified fleet location. This value must fall between the minimum
                    and maximum size limits.
                  minimum: 0
                  type: integer
                MaxSize:
                  description: The maximum value that is allowed for the fleet's instance
                    count for a location. When creating a new fleet, GameLift automatically
                    sets this value to "1". Once the fleet is active, you can change this
                    value.
                  minimum: 0
                  type: integer
                MinSize:
                  description: The minimum value allowed for the fleet's instance count
                    for a location. When creating a new fleet, GameLift automatically
                    sets this value to "0". After the fleet is active, you can change
                    this value.
                  minimum: 0
                  type: integer
              required:
              - DesiredEC2Instances
              - MinSize
              - MaxSize
              type: object
          required:
          - Location
          type: object
        maxItems: 100
        minItems: 1
        type: array
      MaxSize:
        description: '[DEPRECATED] The maximum value that is allowed for the fleet''s
          instance count. When creating a new fleet, GameLift automatically sets this
          value to "1". Once the fleet is active, you can change this value.'
        minimum: 0
        type: integer
      MetricGroups:
        description: The name of an Amazon CloudWatch metric group. A metric group aggregates
          the metrics for all fleets in the group. Specify a string containing the metric
          group name. You can use an existing name or use a new name to create a new metric
          group. Currently, this parameter can have only one string.
        insertionOrder: false
        items:
          type: string
        maxItems: 1
        type: array
      MinSize:
        description: '[DEPRECATED] The minimum value allowed for the fleet''s instance
          count. When creating a new fleet, GameLift automatically sets this value to
          "0". After the fleet is active, you can change this value.'
        minimum: 0
        type: integer
      Name:
        description: A descriptive label that is associated with a fleet. Fleet names
          do not need to be unique.
        maxLength: 1024
        minLength: 1
        type: string
      NewGameSessionProtectionPolicy:
        description: A game session protection policy to apply to all game sessions hosted
          on instances in this fleet. When protected, active game sessions cannot be terminated
          during a scale-down event. If this parameter is not set, instances in this fleet
          default to no protection. You can change a fleet's protection policy to affect
          future game sessions on the fleet. You can also set protection for individual
          game sessions.
        enum:
        - FullProtection
        - NoProtection
        type: string
      ResourceCreationLimitPolicy:
        additionalProperties: false
        description: 'A policy that limits the number of game sessions a player can create
          on the same fleet. This optional policy gives game owners control over how players
          can consume available game server resources. A resource creation policy makes
          the following statement: "An individual player can create a maximum number of
          new game sessions within a specified time period".


          The policy is evaluated when a player tries to create a new game session. For
          example, assume you have a policy of 10 new game sessions and a time period
          of 60 minutes. On receiving a CreateGameSession request, Amazon GameLift checks
          that the player (identified by CreatorId) has created fewer than 10 game sessions
          in the past 60 minutes.'
        properties:
          NewGameSessionsPerCreator:
            description: The maximum number of game sessions that an individual can create
              during the policy period.
            minimum: 0
            type: integer
          PolicyPeriodInMinutes:
            description: The time span used in evaluating the resource creation limit
              policy.
            minimum: 0
            type: integer
        type: object
      RuntimeConfiguration:
        additionalProperties: false
        description: 'A collection of server process configurations that describe the
          processes to run on each instance in a fleet. All fleets must have a runtime
          configuration. Each instance in the fleet maintains server processes as specified
          in the runtime configuration, launching new ones as existing processes end.
          Each instance regularly checks for an updated runtime configuration makes adjustments
          as called for.


          The runtime configuration enables the instances in a fleet to run multiple processes
          simultaneously. Potential scenarios are as follows: (1) Run multiple processes
          of a single game server executable to maximize usage of your hosting resources.
          (2) Run one or more processes of different executables, such as your game server
          and a metrics tracking program. (3) Run multiple processes of a single game
          server but with different launch parameters, for example to run one process
          on each instance in debug mode.


          An Amazon GameLift instance is limited to 50 processes running simultaneously.
          A runtime configuration must specify fewer than this limit. To calculate the
          total number of processes specified in a runtime configuration, add the values
          of the ConcurrentExecutions parameter for each ServerProcess object in the runtime
          configuration.'
        properties:
          GameSessionActivationTimeoutSeconds:
            description: The maximum amount of time (in seconds) that a game session can
              remain in status ACTIVATING. If the game session is not active before the
              timeout, activation is terminated and the game session status is changed
              to TERMINATED.
            maximum: 600
            minimum: 1
            type: integer
          MaxConcurrentGameSessionActivations:
            description: The maximum number of game sessions with status ACTIVATING to
              allow on an instance simultaneously. This setting limits the amount of instance
              resources that can be used for new game activations at any one time.
            maximum: 2147483647
            minimum: 1
            type: integer
          ServerProcesses:
            description: A collection of server process configurations that describe which
              server processes to run on each instance in a fleet.
            insertionOrder: false
            items:
              additionalProperties: false
              description: A set of instructions for launching server processes on each
                instance in a fleet. Each instruction set identifies the location of the
                server executable, optional launch parameters, and the number of server
                processes with this configuration to maintain concurrently on the instance.
                Server process configurations make up a fleet's RuntimeConfiguration.
              properties:
                ConcurrentExecutions:
                  description: The number of server processes that use this configuration
                    to run concurrently on an instance.
                  minimum: 1
                  type: integer
                LaunchPath:
                  description: 'The location of the server executable in a custom game
                    build or the name of the Realtime script file that contains the Init()
                    function. Game builds and Realtime scripts are installed on instances
                    at the root:


                    Windows (for custom game builds only): C:\game. Example: "C:\game\MyGame\server.exe"


                    Linux: /local/game. Examples: "/local/game/MyGame/server.exe" or "/local/game/MyRealtimeScript.js"'
                  maxLength: 1024
                  minLength: 1
                  pattern: ^([Cc]:\\game\S+|/local/game/\S+)
                  type: string
                Parameters:
                  description: An optional list of parameters to pass to the server executable
                    or Realtime script on launch.
                  maxLength: 1024
                  minLength: 1
                  type: string
              required:
              - ConcurrentExecutions
              - LaunchPath
              type: object
            maxItems: 50
            type: array
        type: object
      type:
        enum:
        - update




Permissions - gamelift:UpdateFleetAttributes, gamelift:CreateFleetLocations, gamelift:DeleteFleetLocations, gamelift:UpdateFleetCapacity, gamelift:UpdateFleetPortSettings, gamelift:UpdateRuntimeConfiguration, gamelift:DescribeFleetLocationCapacity, gamelift:DescribeFleetPortSettings, gamelift:DescribeFleetLocationAttributes

