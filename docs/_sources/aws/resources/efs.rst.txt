.. File Generated By c7n-sphinxext from source. Do not edit.

.. _aws.efs:

aws.efs
=======




Filters
-------


  - :ref:`check-secure-transport <aws.efs.filters.check-secure-transport>`

  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`health-event <aws.common.filters.health-event>`
  
  - :ref:`json-diff <aws.efs.filters.json-diff>`

  - :ref:`kms-key <aws.efs.filters.kms-key>`

  - :ref:`lifecycle-policy <aws.efs.filters.lifecycle-policy>`

  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`ops-item <aws.common.filters.ops-item>`
  
  - :ref:`reduce <aws.common.filters.reduce>`
  
  - :ref:`tag-count <aws.common.filters.tag-count>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.efs.filters.check-secure-transport:

check-secure-transport
++++++++++++++++++++++
Find EFS that does not enforce secure transport

:Example:

.. code-block:: yaml

 - name: efs-securetransport-check-policy
   resource: efs
   filters:
     - check-secure-transport

To configure an EFS to enforce secure transport, set up the appropriate
Effect and Condition for its policy document. For example:

.. code-block:: json

    {
        "Sid": "efs-statement-b3f6b59b-d938-4001-9154-508f67707073",
        "Effect": "Deny",
        "Principal": { "AWS": "*" },
        "Action": "*",
        "Condition": {
            "Bool": { "aws:SecureTransport": "false" }
        }
    }

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - check-secure-transport
    required:
    - type




Permissions - elasticfilesystem:DescribeFileSystemPolicy


.. _aws.efs.filters.json-diff:

json-diff
+++++++++
Compute the diff from the current resource to a previous version.

A resource matches the filter if a diff exists between the current
resource and the selected revision.

Utilizes config as a resource revision database.

Revisions can be selected by date, against the previous version, and
against a locked version (requires use of is-locked filter).

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      selector:
        enum:
        - previous
        - date
        - locked
      selector_value:
        type: string
      type:
        enum:
        - json-diff
    required:
    - type




Permissions - config:GetResourceConfigHistory


.. _aws.efs.filters.kms-key:

kms-key
+++++++
Filter a resource by its associated kms key and optionally the aliasname
of the kms key by using 'c7n:AliasName'

:example:

Match a specific key alias:

    .. code-block:: yaml

        policies:
            - name: dms-encrypt-key-check
              resource: dms-instance
              filters:
                - type: kms-key
                  key: "c7n:AliasName"
                  value: alias/aws/dms

Or match against native key attributes such as ``KeyManager``, which
more explicitly distinguishes between ``AWS`` and ``CUSTOMER``-managed
keys. The above policy can also be written as:

    .. code-block:: yaml

        policies:
            - name: dms-aws-managed-key
              resource: dms-instance
              filters:
                - type: kms-key
                  key: KeyManager
                  value: AWS

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      match-resource:
        type: boolean
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      operator:
        enum:
        - and
        - or
      type:
        enum:
        - kms-key
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - kms:ListKeys, kms:DescribeKey


.. _aws.efs.filters.lifecycle-policy:

lifecycle-policy
++++++++++++++++
Filters efs based on the state of lifecycle policies

:example:

  .. code-block:: yaml

        policies:
          - name: efs-filter-lifecycle
            resource: efs
            filters:
              - type: lifecycle-policy
                state: present
                value: AFTER_7_DAYS

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      state:
        enum:
        - present
        - absent
      type:
        enum:
        - lifecycle-policy
      value:
        type: string
    required:
    - state
    - type




Permissions - elasticfilesystem:DescribeLifecycleConfiguration




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`configure-lifecycle-policy <aws.efs.actions.configure-lifecycle-policy>`

  - :ref:`copy-related-tag <aws.common.actions.copy-related-tag>`
  
  - :ref:`delete <aws.efs.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`post-item <aws.common.actions.post-item>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.efs.actions.configure-lifecycle-policy:

configure-lifecycle-policy
++++++++++++++++++++++++++
Enable/disable lifecycle policy for efs.

:example:

  .. code-block:: yaml

        policies:
          - name: efs-apply-lifecycle
            resource: efs
            actions:
              - type: configure-lifecycle-policy
                state: enable
                rules:
                  - 'TransitionToIA': 'AFTER_7_DAYS'

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      rules:
        items:
          type: object
        type: array
      state:
        enum:
        - enable
        - disable
      type:
        enum:
        - configure-lifecycle-policy
    required:
    - state
    - type




Permissions - elasticfilesystem:PutLifecycleConfiguration


.. _aws.efs.actions.delete:

delete
++++++
Parent base class for filters and actions.
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - delete
    required:
    - type




Permissions - elasticfilesystem:DescribeMountTargets, elasticfilesystem:DeleteMountTarget, elasticfilesystem:DeleteFileSystem

