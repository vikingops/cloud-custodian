.. File Generated By c7n-sphinxext from source. Do not edit.

.. _aws.event-rule:

aws.event-rule
==============




Filters
-------


  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`event-rule-target <aws.event-rule.filters.event-rule-target>`

  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`invalid-targets <aws.event-rule.filters.invalid-targets>`

  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`ops-item <aws.common.filters.ops-item>`
  
  - :ref:`reduce <aws.common.filters.reduce>`
  
  - :ref:`value <aws.common.filters.value>`
  


.. _aws.event-rule.filters.event-rule-target:

event-rule-target
+++++++++++++++++
Filter event rules by their targets

:example:

.. code-block:: yaml

    policies:
        - name: find-event-rules-with-no-targets
          resource: aws.event-rule
          filters:
            - type: event-rule-target
              key: Arn
              value: absent

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - event-rule-target
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - events:ListTargetsByRule


.. _aws.event-rule.filters.invalid-targets:

invalid-targets
+++++++++++++++
Filter event rules for invalid targets, Use the `all` option to
find any event rules that have all invalid targets, otherwise
defaults to filtering any event rule with at least one invalid
target.

:example:

.. code-block:: yaml

    policies:
        - name: find-event-rules-with-invalid-targets
          resource: aws.event-rule
          filters:
            - type: invalid-targets
              all: true # defaults to false

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      all:
        default: false
        type: boolean
      type:
        enum:
        - invalid-targets
    required:
    - type




Permissions - events:ListTargetsByRule




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`copy-related-tag <aws.common.actions.copy-related-tag>`
  
  - :ref:`delete <aws.event-rule.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`post-item <aws.common.actions.post-item>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.event-rule.actions.delete:

delete
++++++
Delete an event rule, force target removal with the `force` option

:example:

.. code-block:: yaml

    policies:
        - name: force-delete-rules
          resource: aws.event-rule
          filters:
            - Name: my-event-rule
          actions:
            - type: delete
              force: true

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      force:
        type: boolean
      type:
        enum:
        - delete
    required:
    - type




Permissions - events:DeleteRule, events:RemoveTargets, events:ListTargetsByRule

