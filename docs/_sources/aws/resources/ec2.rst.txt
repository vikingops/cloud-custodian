.. File Generated By c7n-sphinxext from source. Do not edit.

.. _aws.ec2:

aws.ec2
=======




Filters
-------


  - :ref:`check-permissions <aws.common.filters.check-permissions>`
  
  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`default-vpc <aws.ec2.filters.default-vpc>`

  - :ref:`ebs <aws.ec2.filters.ebs>`

  - :ref:`ephemeral <aws.ec2.filters.ephemeral>`

  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`health-event <aws.common.filters.health-event>`
  
  - :ref:`image <aws.ec2.filters.image>`

  - :ref:`image-age <aws.ec2.filters.image-age>`

  - :ref:`instance-age <aws.ec2.filters.instance-age>`

  - :ref:`instance-attribute <aws.ec2.filters.instance-attribute>`

  - :ref:`instance-uptime <aws.ec2.filters.instance-uptime>`

  - :ref:`json-diff <aws.ec2.filters.json-diff>`

  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`metrics <aws.common.filters.metrics>`
  
  - :ref:`network-location <aws.common.filters.network-location>`
  
  - :ref:`offhour <aws.ec2.filters.offhour>`

  - :ref:`onhour <aws.ec2.filters.onhour>`

  - :ref:`ops-item <aws.common.filters.ops-item>`
  
  - :ref:`reduce <aws.common.filters.reduce>`
  
  - :ref:`security-group <aws.common.filters.security-group>`
  
  - :ref:`singleton <aws.ec2.filters.singleton>`

  - :ref:`ssm <aws.ec2.filters.ssm>`

  - :ref:`ssm-compliance <aws.ec2.filters.ssm-compliance>`

  - :ref:`state-age <aws.ec2.filters.state-age>`

  - :ref:`subnet <aws.common.filters.subnet>`
  
  - :ref:`tag-count <aws.common.filters.tag-count>`
  
  - :ref:`termination-protected <aws.ec2.filters.termination-protected>`

  - :ref:`user-data <aws.ec2.filters.user-data>`

  - :ref:`value <aws.common.filters.value>`
  
  - :ref:`vpc <aws.common.filters.vpc>`
  


.. _aws.ec2.filters.default-vpc:

default-vpc
+++++++++++
Matches if an ec2 database is in the default vpc
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - default-vpc
    required:
    - type




Permissions - ec2:DescribeVpcs


.. _aws.ec2.filters.ebs:

ebs
+++
EC2 instances with EBS backed volume

Filters EC2 instances with EBS backed storage devices (non ephemeral)

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-encrypted-ebs-volumes
        resource: ec2
        filters:
          - type: ebs
            key: Encrypted
            value: true

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      operator:
        enum:
        - and
        - or
      skip-devices:
        items:
          type: string
        type: array
      type:
        enum:
        - ebs
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - ec2:DescribeVolumes


.. _aws.ec2.filters.ephemeral:

ephemeral
+++++++++
EC2 instances with ephemeral storage

Filters EC2 instances that have ephemeral storage (an instance-store backed
root device)

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-ephemeral-instances
        resource: ec2
        filters:
          - type: ephemeral

http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - ephemeral
    required:
    - type





.. _aws.ec2.filters.image:

image
+++++


.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - image
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - ec2:DescribeImages


.. _aws.ec2.filters.image-age:

image-age
+++++++++
EC2 AMI age filter

Filters EC2 instances based on the age of their AMI image (in days)

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-ancient-ami
        resource: ec2
        filters:
          - type: image-age
            op: ge
            days: 90

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      days:
        type: number
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - image-age
    required:
    - type




Permissions - ec2:DescribeImages


.. _aws.ec2.filters.instance-age:

instance-age
++++++++++++
Filters instances based on their age (in days)

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-30-days-plus
        resource: ec2
        filters:
          - type: instance-age
            op: ge
            days: 30

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      days:
        type: number
      hours:
        type: number
      minutes:
        type: number
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - instance-age
    required:
    - type





.. _aws.ec2.filters.instance-attribute:

instance-attribute
++++++++++++++++++
EC2 Instance Value Filter on a given instance attribute.

Filters EC2 Instances with the given instance attribute

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-unoptimized-ebs
        resource: ec2
        filters:
          - type: instance-attribute
            attribute: ebsOptimized
            key: "Value"
            value: false

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      attribute:
        enum:
        - instanceType
        - kernel
        - ramdisk
        - userData
        - disableApiTermination
        - instanceInitiatedShutdownBehavior
        - rootDeviceName
        - blockDeviceMapping
        - productCodes
        - sourceDestCheck
        - groupSet
        - ebsOptimized
        - sriovNetSupport
        - enaSupport
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - instance-attribute
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - attribute




Permissions - ec2:DescribeInstanceAttribute


.. _aws.ec2.filters.instance-uptime:

instance-uptime
+++++++++++++++
Automatically filter resources older than a given date.

**Deprecated** use a value filter with `value_type: age` which can be
done on any attribute.

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      days:
        type: number
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - instance-uptime
    required:
    - type





.. _aws.ec2.filters.json-diff:

json-diff
+++++++++
Compute the diff from the current resource to a previous version.

A resource matches the filter if a diff exists between the current
resource and the selected revision.

Utilizes config as a resource revision database.

Revisions can be selected by date, against the previous version, and
against a locked version (requires use of is-locked filter).

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      selector:
        enum:
        - previous
        - date
        - locked
      selector_value:
        type: string
      type:
        enum:
        - json-diff
    required:
    - type




Permissions - config:GetResourceConfigHistory


.. _aws.ec2.filters.offhour:

offhour
+++++++
Custodian OffHour filter

Filters running EC2 instances with the intent to stop at a given hour of
the day. A list of days to excluded can be included as a list of strings
with the format YYYY-MM-DD. Alternatively, the list (using the same syntax)
can be taken from a specified url.

Note: You can disable filtering of only running instances by setting
`state-filter: false`

:Example:

.. code-block:: yaml

    policies:
      - name: offhour-evening-stop
        resource: ec2
        filters:
          - type: offhour
            tag: custodian_downtime
            default_tz: et
            offhour: 20
        actions:
          - stop

      - name: offhour-evening-stop-skip-holidays
        resource: ec2
        filters:
          - type: offhour
            tag: custodian_downtime
            default_tz: et
            offhour: 20
            skip-days: ['2017-12-25']
        actions:
          - stop

      - name: offhour-evening-stop-skip-holidays-from
        resource: ec2
        filters:
          - type: offhour
            tag: custodian_downtime
            default_tz: et
            offhour: 20
            skip-days-from:
              expr: 0
              format: csv
              url: 's3://location/holidays.csv'
        actions:
          - stop

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default_tz:
        type: string
      fallback_schedule:
        type: string
      offhour:
        maximum: 23
        minimum: 0
        type: integer
      opt-out:
        type: boolean
      skip-days:
        items:
          pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}
          type: string
        type: array
      skip-days-from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      state-filter:
        type: boolean
      tag:
        type: string
      type:
        enum:
        - offhour
      weekends:
        type: boolean
      weekends-only:
        type: boolean
    required:
    - type





.. _aws.ec2.filters.onhour:

onhour
++++++
Custodian OnHour filter

Filters stopped EC2 instances with the intent to start at a given hour of
the day. A list of days to excluded can be included as a list of strings
with the format YYYY-MM-DD. Alternatively, the list (using the same syntax)
can be taken from a specified url.

Note: You can disable filtering of only stopped instances by setting
`state-filter: false`

:Example:

.. code-block:: yaml

    policies:
      - name: onhour-morning-start
        resource: ec2
        filters:
          - type: onhour
            tag: custodian_downtime
            default_tz: et
            onhour: 6
        actions:
          - start

      - name: onhour-morning-start-skip-holidays
        resource: ec2
        filters:
          - type: onhour
            tag: custodian_downtime
            default_tz: et
            onhour: 6
            skip-days: ['2017-12-25']
        actions:
          - start

      - name: onhour-morning-start-skip-holidays-from
        resource: ec2
        filters:
          - type: onhour
            tag: custodian_downtime
            default_tz: et
            onhour: 6
            skip-days-from:
              expr: 0
              format: csv
              url: 's3://location/holidays.csv'
        actions:
          - start

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default_tz:
        type: string
      fallback_schedule:
        type: string
      onhour:
        maximum: 23
        minimum: 0
        type: integer
      opt-out:
        type: boolean
      skip-days:
        items:
          pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}
          type: string
        type: array
      skip-days-from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      state-filter:
        type: boolean
      tag:
        type: string
      type:
        enum:
        - onhour
      weekends:
        type: boolean
      weekends-only:
        type: boolean
    required:
    - type





.. _aws.ec2.filters.singleton:

singleton
+++++++++
EC2 instances without autoscaling or a recover alarm

Filters EC2 instances that are not members of an autoscaling group
and do not have Cloudwatch recover alarms.

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-recover-instances
        resource: ec2
        filters:
          - singleton
        actions:
          - type: tag
            key: problem
            value: instance is not resilient

https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - singleton
    required:
    - type




Permissions - cloudwatch:DescribeAlarmsForMetric


.. _aws.ec2.filters.ssm:

ssm
+++
Filter ec2 instances by their ssm status information.

:Example:

Find ubuntu 18.04 instances are active with ssm.

.. code-block:: yaml

    policies:
      - name: ec2-ssm-check
        resource: ec2
        filters:
          - type: ssm
            key: PingStatus
            value: Online
          - type: ssm
            key: PlatformName
            value: Ubuntu
          - type: ssm
            key: PlatformVersion
            value: 18.04

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - ssm
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - ssm:DescribeInstanceInformation


.. _aws.ec2.filters.ssm-compliance:

ssm-compliance
++++++++++++++
Filter ec2 instances by their ssm compliance status.

:Example:

Find non-compliant ec2 instances.

.. code-block:: yaml

    policies:
      - name: ec2-ssm-compliance
        resource: ec2
        filters:
          - type: ssm-compliance
            compliance_types:
              - Association
              - Patch
            severity:
              - CRITICAL
              - HIGH
              - MEDIUM
              - LOW
              - UNSPECIFIED
            states:
              - NON_COMPLIANT
            eval_filters:
             - type: value
               key: ExecutionSummary.ExecutionTime
               value_type: age
               value: 30
               op: less-than

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      compliance_types:
        items:
          type: string
        type: array
      eval_filters:
        items:
          oneOf:
          - $ref: '#/definitions/filters/valuekv'
          - $ref: '#/definitions/filters/value'
        type: array
      op:
        enum:
        - or
        - and
      severity:
        items:
          type: string
        type: array
      states:
        default:
        - NON_COMPLIANT
        items:
          enum:
          - COMPLIANT
          - NON_COMPLIANT
        type: array
      type:
        enum:
        - ssm-compliance
    required:
    - compliance_types
    - type




Permissions - ssm:ListResourceComplianceSummaries


.. _aws.ec2.filters.state-age:

state-age
+++++++++
Age an instance has been in the given state.

.. code-block:: yaml

    policies:
      - name: ec2-state-running-7-days
        resource: ec2
        filters:
          - type: state-age
            op: ge
            days: 7

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      days:
        type: number
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - state-age
    required:
    - type





.. _aws.ec2.filters.termination-protected:

termination-protected
+++++++++++++++++++++
EC2 instances with ``disableApiTermination`` attribute set

Filters EC2 instances with ``disableApiTermination`` attribute set to true.

:Example:

.. code-block:: yaml

    policies:
      - name: termination-protection-enabled
        resource: ec2
        filters:
          - type: termination-protected

:Example:

.. code-block:: yaml

    policies:
      - name: termination-protection-NOT-enabled
        resource: ec2
        filters:
          - not:
            - type: termination-protected

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - termination-protected
    required:
    - type




Permissions - ec2:DescribeInstanceAttribute


.. _aws.ec2.filters.user-data:

user-data
+++++++++
Filter on EC2 instances which have matching userdata.
Note: It is highly recommended to use regexes with the ?sm flags, since Custodian
uses re.match() and userdata spans multiple lines.

    :example:

    .. code-block:: yaml

        policies:
          - name: ec2_userdata_stop
            resource: ec2
            filters:
              - type: user-data
                op: regex
                value: (?smi).*password=
            actions:
              - stop

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: object
      key:
        type: string
      op:
        enum:
        - eq
        - equal
        - ne
        - not-equal
        - gt
        - greater-than
        - ge
        - gte
        - le
        - lte
        - lt
        - less-than
        - glob
        - regex
        - regex-case
        - in
        - ni
        - not-in
        - contains
        - difference
        - intersect
      type:
        enum:
        - user-data
      value:
        oneOf:
        - type: array
        - type: string
        - type: boolean
        - type: number
        - type: 'null'
      value_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
      value_regex:
        type: string
      value_type:
        enum:
        - age
        - integer
        - expiration
        - normalize
        - size
        - cidr
        - cidr_size
        - swap
        - resource_count
        - expr
        - unique_size
        - date
        - version
    required:
    - type




Permissions - ec2:DescribeInstanceAttribute




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`autorecover-alarm <aws.ec2.actions.autorecover-alarm>`

  - :ref:`copy-related-tag <aws.common.actions.copy-related-tag>`
  
  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`modify-security-groups <aws.common.actions.modify-security-groups>`
  
  - :ref:`normalize-tag <aws.common.actions.normalize-tag>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`post-item <aws.common.actions.post-item>`
  
  - :ref:`propagate-spot-tags <aws.ec2.actions.propagate-spot-tags>`

  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`reboot <aws.ec2.actions.reboot>`

  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`rename-tag <aws.common.actions.rename-tag>`
  
  - :ref:`resize <aws.ec2.actions.resize>`

  - :ref:`send-command <aws.ec2.actions.send-command>`

  - :ref:`set-instance-profile <aws.ec2.actions.set-instance-profile>`

  - :ref:`set-metadata-access <aws.ec2.actions.set-metadata-access>`

  - :ref:`set-monitoring <aws.ec2.actions.set-monitoring>`

  - :ref:`snapshot <aws.ec2.actions.snapshot>`

  - :ref:`start <aws.ec2.actions.start>`

  - :ref:`stop <aws.ec2.actions.stop>`

  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`tag-trim <aws.common.actions.tag-trim>`
  
  - :ref:`terminate <aws.ec2.actions.terminate>`

  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.ec2.actions.autorecover-alarm:

autorecover-alarm
+++++++++++++++++
Adds a cloudwatch metric alarm to recover an EC2 instance.

This action takes effect on instances that are NOT part
of an ASG.

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-autorecover-alarm
        resource: ec2
        filters:
          - singleton
        actions:
          - autorecover-alarm

https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - autorecover-alarm
    required:
    - type




Permissions - cloudwatch:PutMetricAlarm


.. _aws.ec2.actions.propagate-spot-tags:

propagate-spot-tags
+++++++++++++++++++
Propagate Tags that are set at Spot Request level to EC2 instances.

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-spot-instances
        resource: ec2
        filters:
          - State.Name: pending
          - instanceLifecycle: spot
        actions:
          - type: propagate-spot-tags
            only_tags:
              - Name
              - BillingTag

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      only_tags:
        items:
          type: string
        type: array
      type:
        enum:
        - propagate-spot-tags
    required:
    - type




Permissions - ec2:DescribeInstances, ec2:DescribeSpotInstanceRequests, ec2:DescribeTags, ec2:CreateTags


.. _aws.ec2.actions.reboot:

reboot
++++++
Reboots a previously running EC2 instance.

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-reboot-instances
        resource: ec2
        query:
          - instance-state-name: running
        actions:
          - reboot

http://docs.aws.amazon.com/cli/latest/reference/ec2/reboot-instances.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - reboot
    required:
    - type




Permissions - ec2:RebootInstances


.. _aws.ec2.actions.resize:

resize
++++++
Change an instance's size.

An instance can only be resized when its stopped, this action
can optionally restart an instance if needed to effect the instance
type change. Instances are always left in the run state they were
found in.

There are a few caveats to be aware of, instance resizing
needs to maintain compatibility for architecture, virtualization type
hvm/pv, and ebs optimization at minimum.

http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-resize.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      default:
        type: string
      restart:
        type: boolean
      type:
        enum:
        - resize
      type-map:
        type: object
    required:
    - type




Permissions - ec2:DescribeInstances, ec2:ModifyInstanceAttribute


.. _aws.ec2.actions.send-command:

send-command
++++++++++++
Run an SSM Automation Document on an instance.

:Example:

Find ubuntu 18.04 instances are active with ssm.

.. code-block:: yaml

    policies:
      - name: ec2-osquery-install
        resource: ec2
        filters:
          - type: ssm
            key: PingStatus
            value: Online
          - type: ssm
            key: PlatformName
            value: Ubuntu
          - type: ssm
            key: PlatformVersion
            value: 18.04
        actions:
          - type: send-command
            command:
              DocumentName: AWS-RunShellScript
              Parameters:
                commands:
                  - wget https://pkg.osquery.io/deb/osquery_3.3.0_1.linux.amd64.deb
                  - dpkg -i osquery_3.3.0_1.linux.amd64.deb

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      command:
        type: object
      type:
        enum:
        - send-command
    required:
    - command




Permissions - ssm:SendCommand


.. _aws.ec2.actions.set-instance-profile:

set-instance-profile
++++++++++++++++++++
Sets (add, modify, remove) the instance profile for a running EC2 instance.

:Example:

.. code-block:: yaml

    policies:
      - name: set-default-instance-profile
        resource: ec2
        filters:
          - IamInstanceProfile: absent
        actions:
          - type: set-instance-profile
            name: default

https://docs.aws.amazon.com/cli/latest/reference/ec2/associate-iam-instance-profile.html
https://docs.aws.amazon.com/cli/latest/reference/ec2/disassociate-iam-instance-profile.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      name:
        type: string
      type:
        enum:
        - set-instance-profile
    required:
    - type




Permissions - ec2:AssociateIamInstanceProfile, ec2:DisassociateIamInstanceProfile, iam:PassRole


.. _aws.ec2.actions.set-metadata-access:

set-metadata-access
+++++++++++++++++++
Set instance metadata server access for an instance.

:example:

Require instances to use IMDSv2

.. code-block:: yaml

   policies:
     - name: ec2-require-imdsv2
       resource: ec2
       filters:
         - MetadataOptions.HttpTokens: optional
       actions:
         - type: set-metadata-access
           tokens: required

:example:

Disable metadata server access

.. code-block: yaml

   policies:
     - name: ec2-disable-imds
       resource: ec2
       filters:
         - MetadataOptions.HttpEndpoint: enabled
       actions:
         - type: set-metadata-access
           endpoint: disabled

Reference: https://amzn.to/2XOuxpQ

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      anyOf:
      - required:
        - endpoint
      - required:
        - tokens
      - required:
        - hop-limit
      endpoint:
        enum:
        - enabled
        - disabled
      hop-limit:
        maximum: 64
        minimum: 1
        type: integer
      tokens:
        enum:
        - required
        - optional
      type:
        enum:
        - set-metadata-access
    required:
    - type




Permissions - ec2:ModifyInstanceMetadataOptions


.. _aws.ec2.actions.set-monitoring:

set-monitoring
++++++++++++++
Action on EC2 Instances to enable/disable detailed monitoring

The different states of detailed monitoring status are :
'disabled'|'disabling'|'enabled'|'pending'
(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#EC2.Client.describe_instances)

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-detailed-monitoring-activation
        resource: ec2
        filters:
          - Monitoring.State: disabled
        actions:
          - type: set-monitoring
            state: enable

References

 https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      state:
        enum:
        - enable
        - disable
      type:
        enum:
        - set-monitoring
    required:
    - type




Permissions - ec2:MonitorInstances, ec2:UnmonitorInstances


.. _aws.ec2.actions.snapshot:

snapshot
++++++++
Snapshot the volumes attached to an EC2 instance.

Tags may be optionally added to the snapshot during creation.

- `copy-volume-tags` copies all the tags from the specified
  volume to the corresponding snapshot.
- `copy-tags` copies the listed tags from each volume
  to the snapshot.  This is mutually exclusive with
  `copy-volume-tags`.
- `tags` allows new tags to be added to each snapshot when using
  'copy-tags`.  If no tags are specified, then the tag
  `custodian_snapshot` is added.

The default behavior is `copy-volume-tags: true`.

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-snapshots
        resource: ec2
        actions:
          - type: snapshot
            copy-tags:
              - Name
            tags:
                custodian_snapshot: True

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      copy-tags:
        items:
          type: string
        type: array
      copy-volume-tags:
        type: boolean
      exclude-boot:
        default: false
        type: boolean
      tags:
        type: object
      type:
        enum:
        - snapshot
    required:
    - type




Permissions - ec2:CreateSnapshot, ec2:CreateTags


.. _aws.ec2.actions.start:

start
+++++
Starts a previously stopped EC2 instance.

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-start-stopped-instances
        resource: ec2
        query:
          - instance-state-name: stopped
        actions:
          - start

http://docs.aws.amazon.com/cli/latest/reference/ec2/start-instances.html

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - start
    required:
    - type




Permissions - ec2:StartInstances


.. _aws.ec2.actions.stop:

stop
++++
Stops or hibernates a running EC2 instances

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-stop-running-instances
        resource: ec2
        query:
          - instance-state-name: running
        actions:
          - stop

      - name: ec2-hibernate-instances
        resources: ec2
        query:
          - instance-state-name: running
        actions:
          - type: stop
            hibernate: true


Note when using hiberate, instances not configured for hiberation
will just be stopped.

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      hibernate:
        type: boolean
      terminate-ephemeral:
        type: boolean
      type:
        enum:
        - stop
    required:
    - type




Permissions - ec2:StopInstances


.. _aws.ec2.actions.terminate:

terminate
+++++++++
Terminate a set of instances.

While ec2 offers a bulk delete api, any given instance can be configured
with api deletion termination protection, so we can't use the bulk call
reliabily, we need to process the instances individually. Additionally
If we're configured with 'force' then we'll turn off instance termination
protection.

:Example:

.. code-block:: yaml

    policies:
      - name: ec2-process-termination
        resource: ec2
        filters:
          - type: marked-for-op
            op: terminate
        actions:
          - terminate

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      force:
        type: boolean
      type:
        enum:
        - terminate
    required:
    - type




Permissions - ec2:TerminateInstances

