.. File Generated By c7n-sphinxext from source. Do not edit.

.. _aws.iam-role:

aws.iam-role
============




Filters
-------


  - :ref:`check-permissions <aws.common.filters.check-permissions>`
  
  - :ref:`config-compliance <aws.common.filters.config-compliance>`
  
  - :ref:`cross-account <aws.iam-role.filters.cross-account>`

  - :ref:`event <aws.common.filters.event>`
  
  - :ref:`finding <aws.common.filters.finding>`
  
  - :ref:`has-inline-policy <aws.iam-role.filters.has-inline-policy>`

  - :ref:`has-specific-managed-policy <aws.iam-role.filters.has-specific-managed-policy>`

  - :ref:`iam-analyzer <aws.common.filters.iam-analyzer>`
  
  - :ref:`json-diff <aws.iam-role.filters.json-diff>`

  - :ref:`marked-for-op <aws.common.filters.marked-for-op>`
  
  - :ref:`no-specific-managed-policy <aws.iam-role.filters.no-specific-managed-policy>`

  - :ref:`ops-item <aws.common.filters.ops-item>`
  
  - :ref:`reduce <aws.common.filters.reduce>`
  
  - :ref:`unused <aws.iam-role.filters.unused>`

  - :ref:`usage <aws.common.filters.usage>`
  
  - :ref:`used <aws.iam-role.filters.used>`

  - :ref:`value <aws.common.filters.value>`
  


.. _aws.iam-role.filters.cross-account:

cross-account
+++++++++++++
Check a resource's embedded iam policy for cross account access.
    

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - cross-account
      whitelist:
        items:
          type: string
        type: array
      whitelist_from:
        additionalProperties: 'False'
        properties:
          expr:
            oneOf:
            - type: integer
            - type: string
          format:
            enum:
            - csv
            - json
            - txt
            - csv2dict
          url:
            type: string
        required:
        - url
        type: object
    required:
    - type




Permissions - iam:ListRoles


.. _aws.iam-role.filters.has-inline-policy:

has-inline-policy
+++++++++++++++++
Filter IAM roles that have an inline-policy attached
True: Filter roles that have an inline-policy
False: Filter roles that do not have an inline-policy

:example:

.. code-block:: yaml

    policies:
      - name: iam-roles-with-inline-policies
        resource: iam-role
        filters:
          - type: has-inline-policy
            value: True

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - has-inline-policy
      value:
        type: boolean
    required:
    - type




Permissions - iam:ListRolePolicies


.. _aws.iam-role.filters.has-specific-managed-policy:

has-specific-managed-policy
+++++++++++++++++++++++++++
Filter IAM roles that has a specific policy attached

For example, if the user wants to check all roles with 'admin-policy':

:example:

.. code-block:: yaml

    policies:
      - name: iam-roles-have-admin
        resource: iam-role
        filters:
          - type: has-specific-managed-policy
            value: admin-policy

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - has-specific-managed-policy
      value:
        type: string
    required:
    - type




Permissions - iam:ListAttachedRolePolicies


.. _aws.iam-role.filters.json-diff:

json-diff
+++++++++
Compute the diff from the current resource to a previous version.

A resource matches the filter if a diff exists between the current
resource and the selected revision.

Utilizes config as a resource revision database.

Revisions can be selected by date, against the previous version, and
against a locked version (requires use of is-locked filter).

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      selector:
        enum:
        - previous
        - date
        - locked
      selector_value:
        type: string
      type:
        enum:
        - json-diff
    required:
    - type




Permissions - config:GetResourceConfigHistory


.. _aws.iam-role.filters.no-specific-managed-policy:

no-specific-managed-policy
++++++++++++++++++++++++++
Filter IAM roles that do not have a specific policy attached

For example, if the user wants to check all roles without 'ip-restriction':

:example:

.. code-block:: yaml

    policies:
      - name: iam-roles-no-ip-restriction
        resource: iam-role
        filters:
          - type: no-specific-managed-policy
            value: ip-restriction

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - no-specific-managed-policy
      value:
        type: string
    required:
    - type




Permissions - iam:ListAttachedRolePolicies


.. _aws.iam-role.filters.unused:

unused
++++++
Filter IAM roles that are either being used or not

This filter has been deprecated. Please use the 'used' filter
with the 'state' attribute to get unused iam roles

Checks for usage on EC2, Lambda, ECS only

:example:

.. code-block:: yaml

    policies:
      - name: iam-roles-not-in-use
        resource: iam-role
        filters:
          - type: used
            state: false

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      type:
        enum:
        - unused
    required:
    - type




Permissions - lambda:ListFunctions, autoscaling:DescribeLaunchConfigurations, ec2:DescribeInstances, ec2:DescribeTags, ecs:DescribeClusters, ecs:DescribeServices


.. _aws.iam-role.filters.used:

used
++++
Filter IAM roles that are either being used or not

Checks for usage on EC2, Lambda, ECS only

:example:

.. code-block:: yaml

    policies:
      - name: iam-role-in-use
        resource: iam-role
        filters:
          - type: used
            state: true

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      state:
        type: boolean
      type:
        enum:
        - used
    required:
    - type




Permissions - lambda:ListFunctions, autoscaling:DescribeLaunchConfigurations, ec2:DescribeInstances, ec2:DescribeTags, ecs:DescribeClusters, ecs:DescribeServices




Actions
-------


  - :ref:`auto-tag-user <aws.common.actions.auto-tag-user>`
  
  - :ref:`copy-related-tag <aws.common.actions.copy-related-tag>`
  
  - :ref:`delete <aws.iam-role.actions.delete>`

  - :ref:`invoke-lambda <aws.common.actions.invoke-lambda>`
  
  - :ref:`invoke-sfn <aws.common.actions.invoke-sfn>`
  
  - :ref:`mark-for-op <aws.common.actions.mark-for-op>`
  
  - :ref:`notify <aws.common.actions.notify>`
  
  - :ref:`post-finding <aws.common.actions.post-finding>`
  
  - :ref:`post-item <aws.common.actions.post-item>`
  
  - :ref:`put-metric <aws.common.actions.put-metric>`
  
  - :ref:`remove-tag <aws.common.actions.remove-tag>`
  
  - :ref:`set-boundary <aws.iam-role.actions.set-boundary>`

  - :ref:`set-policy <aws.iam-role.actions.set-policy>`

  - :ref:`tag <aws.common.actions.tag>`
  
  - :ref:`webhook <aws.common.actions.webhook>`
  



.. _aws.iam-role.actions.delete:

delete
++++++
Delete an IAM Role.

To delete IAM Role you must first delete the policies
that are associated with the role. Also, you need to remove
the role from all instance profiles that the role is in.

https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_manage_delete.html

For this case option 'force' is used. If you set it as 'true',
policies that are associated with the role would be detached
(inline policies would be removed) and all instance profiles
the role is in would be removed as well as the role.

For example, if you want to automatically delete an unused IAM role.

:example:

  .. code-block:: yaml

    - name: iam-delete-unused-role
      resource: iam-role
      filters:
        - type: usage
          match-operator: all
          LastAuthenticated: null
      actions:
        - type: delete
          force: true

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      force:
        type: boolean
      type:
        enum:
        - delete
    required:
    - type




Permissions - iam:DeleteRole, iam:DeleteInstanceProfile


.. _aws.iam-role.actions.set-boundary:

set-boundary
++++++++++++
Set IAM Permission boundary on an IAM Role or User.

A role or user can only have a single permission boundary set.

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      policy:
        type: string
      state:
        enum:
        - present
        - absent
      type:
        enum:
        - set-boundary
    required:
    - type




Permissions - iam:PutRolePermissionsBoundary


.. _aws.iam-role.actions.set-policy:

set-policy
++++++++++
Set a specific IAM policy as attached or detached on a role.

You will identify the policy by its arn.

Returns a list of roles modified by the action.

For example, if you want to automatically attach a policy to all roles which don't have it...

:example:

  .. code-block:: yaml

    - name: iam-attach-role-policy
      resource: iam-role
      filters:
        - type: no-specific-managed-policy
          value: my-iam-policy
      actions:
        - type: set-policy
          state: detached
          arn: "*"
        - type: set-policy
          state: attached
          arn: arn:aws:iam::123456789012:policy/my-iam-policy

.. container:: toggle

  

  .. raw:: html
     
    <div class="header docutils container" style=""></div>

  .. code-block:: yaml

    properties:
      arn:
        type: string
      state:
        enum:
        - attached
        - detached
      type:
        enum:
        - set-policy
    required:
    - state
    - arn
    - type




Permissions - iam:AttachRolePolicy, iam:DetachRolePolicy

